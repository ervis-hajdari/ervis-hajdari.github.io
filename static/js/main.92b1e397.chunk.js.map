{"version":3,"sources":["components/elements/Container.jsx","components/elements/CheckVotes.jsx","components/elements/SeparatedDetails.jsx","hooks/useSubreddits.js","hooks/useComments.js","hooks/usePosts.js","hooks/useVisibilityChecker.js","hooks/useSingleSubreddit.js","hooks/useSinglePost.js","core/reducers/header.js","components/Subreddits.jsx","components/Comments.jsx","components/Posts.jsx","layouts/Header.jsx","layouts/index.js","App.js","reportWebVitals.js","core/reducers/index.js","index.js","config/store.js"],"names":["Container","onClick","children","className","PreferenceAction","type","preference","voteColors","like","dislike","neutral","icon","faArrowUp","faArrowDown","color","CheckVotes","likes","React","useState","value","currentPreference","setCurrentPreference","useEffect","prev","SeparatedDetails","title","description","details","style","flex","href","user","date","createdAt","useSubreddits","page","fetching","setFetching","data","setData","noMoreData","setNoMoreData","error","setError","asyncFetch","a","axios","get","response","length","useComments","useParams","subredditID","postID","usePosts","sortBy","setFeching","useVisibilityChecker","ref","isIntersecting","setIntersecting","observer","IntersectionObserver","entry","undefined","current","observe","disconnect","useSingleSubreddit","useSinglePost","SET_HEADER_DESCRIBER","setHeaderDescriber","headerDescriber","Subreddits","pageStates","setPageState","navigate","useNavigate","dispatch","useDispatch","useRef","setPage","lastElementIsVisible","byUser","map","reddit","ind","id","width","Comments","postFetching","postData","postError","commentsFetching","commentsData","commentsError","maxWidth","upvotes","body","comment","name","Posts","options","label","sortPosts","setSortPosts","subredditFetching","subredditData","subredditError","postsFetching","postsData","defaultValue","onChange","post","minWidth","admin","Header","useSelector","state","backgroundColor","margin","cursor","pathname","AppLayout","loading","pageState","childrenVisibilityStyle","display","minHeight","position","cloneElement","App","useRoutes","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","action","store","createStore","combineReducers","reducers","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAUeA,EARG,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SAC5B,OACE,qBAAKC,UAAU,4BAA4BF,QAASA,EAApD,SACGC,K,uBCDDE,EAAmB,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,WAAYL,EAAc,EAAdA,QACtCM,EAAa,CACjBC,KAAM,UACNC,QAAS,UACTC,QAAS,WAGX,OACE,qBAAKT,QAASA,EAASE,UAAU,iBAAjC,SACE,cAAC,IAAD,CACEQ,KAAe,SAATN,EAAkBO,IAAYC,IACpCC,MAAOR,EAAWD,GAAQE,EAAWF,GAAQE,EAAWG,QACxDP,UAAU,iBAgDHY,EA1CI,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAAY,EACkBC,IAAMC,SAAS,CAC/DV,MAAM,EACNC,SAAS,EACTU,MAAO,IAJuB,mBACzBC,EADyB,KACNC,EADM,KAWhC,OAJAJ,IAAMK,WAAU,WACdD,GAAqB,SAACE,GAAD,mBAAC,eAAeA,GAAhB,IAAsBJ,MAAOH,SACjD,CAACA,IAGF,sBAAKb,UAAU,uDAAf,UACE,cAAC,EAAD,CACEE,KAAK,OACLC,WAAYc,EACZnB,QAAS,kBACPoB,GAAqB,SAACE,GAAD,MAAW,CAC9Bf,MAAOe,EAAKf,KACZC,SAAS,EACTU,MAAQI,EAAKf,KAAmBQ,EAAZA,EAAQ,SAIlC,8BACE,+BAAOI,EAAkBD,UAE3B,cAAC,EAAD,CACEd,KAAK,UACLC,WAAYc,EACZnB,QAAS,kBACPoB,GAAqB,SAACE,GAAD,MAAW,CAC9Bf,MAAM,EACNC,SAAUc,EAAKd,QACfU,MAAQI,EAAKd,QAAsBO,EAAZA,EAAQ,a,QClB5BQ,EAnCU,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,MAAOC,EAAoC,EAApCA,YAAaC,EAAuB,EAAvBA,QAAS1B,EAAc,EAAdA,QACvD,OACE,sBACEE,UAAU,6BACVyB,MAAO,CAAEC,KAAM,GACf5B,QAASA,EAHX,UAKGwB,GACC,8BACE,oBAAItB,UAAU,QAAd,SAAuBsB,MAG1BC,GACC,8BACE,sBAAMvB,UAAU,mBAAhB,SAAoCuB,MAGvCC,GACC,sBAAKxB,UAAU,6BAAf,UACE,sBAAMA,UAAU,kBAAhB,SACE,gCACE,oBAAG2B,KAAK,IAAR,gBAAgBH,EAAQI,YAG5B,sBAAM5B,UAAU,kBAAhB,SACE,gCACE,cAAC,IAAD,CAAS6B,KAAML,EAAQM,uB,kECKtBC,EA/BO,SAACC,GAAU,IAAD,EACElB,IAAMC,UAAS,GADjB,mBACvBkB,EADuB,KACbC,EADa,OAENpB,IAAMC,SAAS,IAFT,mBAEvBoB,EAFuB,KAEjBC,EAFiB,OAGMtB,IAAMC,UAAS,GAHrB,mBAGvBsB,EAHuB,KAGXC,EAHW,OAIJxB,IAAMC,UAAS,GAJX,mBAIvBwB,EAJuB,KAIhBC,EAJgB,KAQxBC,EAAU,uCAAG,8BAAAC,EAAA,+EAEQC,IAAMC,IAJjB,yDAI4B,gBAAYZ,EAAZ,cAFzB,cAETa,EAFS,gBAGIA,EAASV,KAHb,OAKC,KAFVA,EAHS,QAKVW,OACDR,GAAc,GACdF,GAAQ,SAAChB,GAAD,4BAAcA,GAAd,YAAuBe,OAEnCD,GAAY,GATG,kDAWfM,GAAS,GACTN,GAAY,GAZG,0DAAH,qDAoBhB,OAJApB,IAAMK,WAAU,WACdsB,MACC,CAACT,IAEG,CAACC,EAAUE,EAAME,EAAYE,ICEvBQ,EA7BK,WAAO,IAAD,EACQC,cAAxBC,EADgB,EAChBA,YAAaC,EADG,EACHA,OADG,EAGQpC,IAAMC,UAAS,GAHvB,mBAGjBkB,EAHiB,KAGPC,EAHO,OAIApB,IAAMC,SAAS,IAJf,mBAIjBoB,EAJiB,KAIXC,EAJW,OAKEtB,IAAMC,UAAS,GALjB,mBAKjBwB,EALiB,KAKVC,EALU,KAOlBC,EAAU,uCAAG,8BAAAC,EAAA,+EAEQC,IAAMC,IAAN,iEACqCK,EADrC,kBAC0DC,EAD1D,cAFR,cAETL,EAFS,gBAKIA,EAASV,KALb,OAKTA,EALS,OAOfC,EAAQD,GACRD,GAAY,GARG,kDAUfM,GAAS,GACTN,GAAY,GAXG,0DAAH,qDAmBhB,OAJApB,IAAMK,WAAU,WACdsB,MACC,IAEI,CAACR,EAAUE,EAAMI,ICSXY,EAnCE,SAACnB,EAAMoB,GAAY,IAC1BH,EAAgBD,cAAhBC,YADyB,EAGFnC,IAAMC,UAAS,GAHb,mBAG1BkB,EAH0B,KAGhBoB,EAHgB,OAITvC,IAAMC,SAAS,IAJN,mBAI1BoB,EAJ0B,KAIpBC,EAJoB,OAKGtB,IAAMC,UAAS,GALlB,mBAK1BsB,EAL0B,KAKdC,EALc,OAMPxB,IAAMC,UAAS,GANR,mBAM1BwB,EAN0B,KAMnBC,EANmB,KAU3BC,EAAU,uCAAG,8BAAAC,EAAA,+EAEQC,IAAMC,IAJjB,yDAKH,WAAOK,EAAP,uBAAiCjB,EAAjC,4BAAyDoB,IAHnD,cAETP,EAFS,gBAKIA,EAASV,KALb,OAOC,KAFVA,EALS,QAOVW,OACDR,GAAc,GACdF,GAAQ,SAAChB,GAAD,4BAAcA,GAAd,YAAuBe,OAEnCkB,GAAW,GAXI,kDAafb,GAAS,GACTa,GAAW,GAdI,0DAAH,qDAsBhB,OAJAvC,IAAMK,WAAU,kBAAMiB,EAAQ,MAAK,CAACgB,IAEpCtC,IAAMK,WAAU,kBAAMsB,MAAc,CAACW,EAAQpB,IAEtC,CAACC,EAAUE,EAAME,EAAYE,IClCvB,SAASe,EAAqBC,GAAM,IAAD,EACNzC,IAAMC,UAAS,GADT,mBACzCyC,EADyC,KACzBC,EADyB,KAG1CC,EAAW,IAAIC,sBAAqB,gBAAEC,EAAF,2BACxCH,EAAgBG,EAAMJ,mBAWxB,OARA1C,IAAMK,WAAU,WAGd,YAFgB0C,IAAhBN,EAAIO,SAAyBJ,EAASK,QAAQR,EAAIO,SAE3C,WACLJ,EAASM,gBAEV,IAEIR,ECbT,IA+BeS,EA/BY,WAAO,IACxBhB,EAAgBD,cAAhBC,YADuB,EAGCnC,IAAMC,UAAS,GAHhB,mBAGxBkB,EAHwB,KAGdC,EAHc,OAIPpB,IAAMC,SAAS,IAJR,mBAIxBoB,EAJwB,KAIlBC,EAJkB,OAKKtB,IAAMC,UAAS,GALpB,mBAKxBsB,EALwB,aAMLvB,IAAMC,UAAS,IANV,mBAMxBwB,EANwB,KAMjBC,EANiB,KAUzBC,EAAU,uCAAG,8BAAAC,EAAA,+EAEQC,IAAMC,IAJjB,yDAI4B,WAAOK,IAFhC,cAETJ,EAFS,gBAGIA,EAASV,KAHb,OAGTA,EAHS,OAKfC,EAAQD,GAERD,GAAY,GAPG,kDASfM,GAAS,GACTN,GAAY,GAVG,0DAAH,qDAkBhB,OAJApB,IAAMK,WAAU,WACdsB,MACC,IAEI,CAACR,EAAUE,EAAME,EAAYE,ICEvB2B,EA9BO,WAAO,IAAD,EACMlB,cAAxBC,EADkB,EAClBA,YAAaC,EADK,EACLA,OADK,EAGKpC,IAAMC,UAAS,GAHpB,mBAGnBkB,EAHmB,KAGToB,EAHS,OAIFvC,IAAMC,SAAS,IAJb,mBAInBoB,EAJmB,KAIbC,EAJa,OAKAtB,IAAMC,UAAS,GALf,mBAKnBwB,EALmB,KAKZC,EALY,KASpBC,EAAU,uCAAG,8BAAAC,EAAA,+EAEQC,IAAMC,IAJjB,yDAKH,WAAOK,EAAP,kBAA4BC,IAHtB,cAETL,EAFS,gBAKIA,EAASV,KALb,OAKTA,EALS,OAOfC,EAAQD,GAERkB,GAAW,GATI,kDAWfb,GAAS,GACTa,GAAW,GAZI,0DAAH,qDAkBhB,OAFAvC,IAAMK,WAAU,kBAAMsB,MAAc,IAE7B,CAACR,EAAUE,EAAMI,IC/Bb4B,EAAuB,4BAEvBC,EAAqB,SAACC,GACjC,MAAO,CACLnE,KAAMiE,EACNE,oBCMJ,IAmDeC,EAnDI,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,aAC1BC,EAAWC,cAEXC,EAAWC,cAEXrB,EAAMzC,IAAM+D,SALiC,EAO3B/D,IAAMC,SAAS,GAPY,mBAO5CiB,EAP4C,KAOtC8C,EAPsC,OAQP/C,EAAcC,GARP,mBAQ5CC,EAR4C,KAQlCE,EARkC,KAQ5BE,EAR4B,KAQhBE,EARgB,KAU7CwC,EAAuBzB,EAAqBC,GAkBlD,OAhBAzC,IAAMK,WAAU,WACdwD,EAASP,EAAmB,CAAE9C,MAAO,aAAc0D,OAAQ,QAC1D,IAEHlE,IAAMK,WAAU,WACVkB,GAEA0C,GAAsBD,GAAQ,SAAC1D,GAAD,OAAUA,EAAO,OAClD,CAAC2D,EAAsB5C,IAE1BrB,IAAMK,WAAU,WACd,GAAIoB,EAAO,OAAOiC,EAAaD,EAAWhC,OAE1CiC,EAAaD,EAAWhE,WACvB,CAAC0B,IAGF,sBAAKjC,UAAU,mBAAf,UACGmC,EAAK8C,KAAI,SAACC,EAAQC,GAAT,OACR,cAAC,EAAD,CAAqBrF,QAAS,kBAAM2E,EAAS,MAAD,OAAOS,EAAOE,MAA1D,SACE,cAAC,EAAD,CACE9D,MAAO4D,EAAO5D,MACdC,YAAa2D,EAAO3D,eAHR4D,MAQhB,qBAAK5B,IAAKA,EAAKvD,UAAU,cAAzB,SACIqC,EAGA,yBAFA,cAAC,IAAD,CAASnC,KAAK,OAAOmF,MAAM,OAAO1E,MAAM,oBCcrC2E,EA1DE,SAAC,GAAkC,IAAhCf,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,aACxBG,EAAWC,cADgC,EAGLV,IAHK,mBAG1CqB,EAH0C,KAG5BC,EAH4B,KAGlBC,EAHkB,OAIO1C,IAJP,mBAI1C2C,EAJ0C,KAIxBC,EAJwB,KAIVC,EAJU,KAkBjD,OAZA9E,IAAMK,WAAU,WACdwD,EACEP,EAAmB,CAAE9C,MAAM,GAAD,OAAKkE,EAASlE,OAAS0D,OAAQQ,EAAS5D,UAEnE,CAAC4D,IAEJ1E,IAAMK,WAAU,WACd,GAAIsE,GAAaG,EAAe,OAAOpB,EAAaD,EAAWhC,OAE1DgD,GAAiBG,GAAkBlB,EAAaD,EAAWhE,WAC/D,CAACgF,EAAcG,IAGhB,sBACE1F,UAAU,cACVyB,MAAO,CACL4D,MAAO,OACPQ,SAAU,KAJd,UAOE,8BACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAYhF,MAAO2E,EAASM,UAE5B,cAAC,EAAD,CACExE,MAAOkE,EAASlE,MAChBC,YAAaiE,EAASO,KACtBvE,QAAS,CACPI,KAAM4D,EAAS5D,KACfE,UAAW0D,EAAS1D,kBAK5B,sBAAK9B,UAAU,2BAA2ByB,MAAO,CAAE4D,MAAO,OAA1D,UACE,qBAAKrF,UAAU,wBAAf,sBACC2F,EAAaV,KAAI,SAACe,EAASb,GAAV,OAChB,qBAAKnF,UAAU,QAAf,SACE,cAAC,EAAD,UACE,cAAC,EAAD,CAEEuB,YAAayE,EAAQD,KACrBvE,QAAS,CAAEI,KAAMoE,EAAQC,KAAMnE,UAAWkE,EAAQlE,YAF7CqD,MAHiBA,a,QCwEvBe,EA/GD,SAAC,GAAkC,IAAhC3B,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,aACrBG,EAAWC,cAEXuB,EAAU,CACd,CAAEnF,MAAO,QAASoF,MAAO,SACzB,CAAEpF,MAAO,OAAQoF,MAAO,SAGpB3B,EAAWC,cACXnB,EAAMzC,IAAM+D,SAT4B,EAWZ/D,IAAMC,SAAS,QAXH,mBAWvCsF,EAXuC,KAW5BC,EAX4B,OAYtBxF,IAAMC,SAAS,GAZO,mBAYvCiB,EAZuC,KAYjC8C,EAZiC,KAcxCC,EAAuBzB,EAAqBC,GAdJ,EAiB5CU,IAjB4C,mBAgBvCsC,EAhBuC,KAgBpBC,EAhBoB,KAgBLC,EAhBK,OAkBQtD,EACpDnB,EACAqE,GApB4C,mBAkBvCK,EAlBuC,KAkBxBC,EAlBwB,KAkBbtE,EAlBa,KAkBDE,EAlBC,KA4C9C,OArBAzB,IAAMK,WAAU,WACdwD,EACEP,EAAmB,CACjB9C,MAAM,MAAD,OAAQkF,EAAclF,OAAS,IACpC0D,OAAQ,QAGX,CAACwB,IAEJ1F,IAAMK,WAAU,YACVsF,GAAkBlE,IAAOiC,EAAaD,EAAWhC,OAEhDgE,GAAsBG,GAAelC,EAAaD,EAAWhE,WACjE,CAACgG,EAAmBG,IAEvB5F,IAAMK,WAAU,WACVkB,GAEA0C,GAAsBD,GAAQ,SAAC1D,GAAD,OAAUA,EAAO,OAClD,CAAC2D,EAAsB4B,IAGxB,sBAAK3G,UAAU,8BAAf,UACE,sBACEA,UAAU,cACVyB,MAAO,CACLC,KAAM,GAHV,UAME,sBAAK1B,UAAU,gCAAf,UACE,sBAAMA,UAAU,QAAhB,qBACA,cAAC,IAAD,CACEmG,QAASA,EACTS,aAAcT,EAAQ,GACtBU,SAAU,SAAC7F,GACT8D,EAAQ,GACRwB,EAAatF,EAAMA,aAIzB,sBAAKhB,UAAU,8BAAf,UACG2G,EAAU1B,KAAI,SAAC6B,EAAM3B,GAAP,OACb,qBAEEnF,UAAU,QACVyB,MAAO,CAAEoE,SAAU,IAAKR,MAAO,QAHjC,SAKE,8BACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAYxE,MAAOiG,EAAKhB,UAExB,cAAC,EAAD,CACEhG,QAAS,kBAAM2E,EAAS,GAAD,OAAIqC,EAAK1B,GAAT,eACvB9D,MAAOwF,EAAKxF,MACZC,YAAauF,EAAKf,KAClBvE,QAAS,CAAEI,KAAMkF,EAAKlF,KAAME,UAAWgF,EAAKhF,eAPhCqD,MALbA,MAkBT,qBAAK5B,IAAKA,EAAKvD,UAAU,cAAzB,SACIqC,EAGA,yBAFA,cAAC,IAAD,CAASnC,KAAK,OAAOmF,MAAM,OAAO1E,MAAM,sBAQhD,qBAAKc,MAAO,CAAE4D,MAAO,MACrB,qBAAKrF,UAAU,QAAQyB,MAAO,CAAEsF,SAAU,KAA1C,SACE,cAAC,EAAD,UACE,cAAC,EAAD,CACEzF,MAAOkF,EAAclF,MACrBC,YAAaiF,EAAcjF,YAC3BC,QAAS,CACPI,KAAM4E,EAAcQ,MACpBlF,UAAW0E,EAAc1E,qBC1ExBmF,EApCA,WACb,IAAM5C,EAAkB6C,aAAY,SAACC,GAAD,OAAWA,EAAMF,OAAO5C,mBACtDI,EAAWC,cAEjB,OACE,sBACE1E,UAAU,+BACVyB,MAAO,CACL2F,gBAAiB,UACjBzG,MAAO,SAJX,UAOE,8BACE,oBACEc,MAAO,CAAE4F,OAAQ,EAAGC,OAAQ,WAC5BxH,QAAS,kBAAM2E,EAAS,CAAE8C,SAAU,OAFtC,SAIE,2CAGJ,qBAAK9F,MAAO,CAAE4D,MAAO,MACrB,gCACE,+BAAOhB,EAAgB/C,QACK,KAA3B+C,EAAgBW,QACf,uBAAMhF,UAAU,QAAhB,eAEE,oBAAGA,UAAU,QAAQyB,MAAO,CAAEd,MAAO,WAArC,gBACM0D,EAAgBW,oBCanBwC,EAvCG,SAAC,GAAkB,IAAhBzH,EAAe,EAAfA,SACbwE,EAAa,CACjBkD,QAAS,UACTlF,MAAO,QACPhC,QAAS,WAJuB,EAOAO,IAAMC,SAASwD,EAAWkD,SAP1B,mBAO3BC,EAP2B,KAOhBlD,EAPgB,KAS5BmD,EACU,YAAdD,EAA0B,CAAEE,QAAS,QAAW,GAElD,OACE,sBAAK5H,UAAU,cAAcyB,MAAO,CAAEoG,UAAW,SAAjD,UACE,cAAC,EAAD,IACA,sBAAKpG,MAAO,CAAEqG,SAAU,WAAYpG,KAAM,GAA1C,UAEI,CACE+F,QACE,qBACEzH,UAAU,4BACVyB,MAAO,CAAE4D,MAAO,QAFlB,SAIE,cAAC,IAAD,CAASnF,KAAK,OAAOS,MAAM,YAAY0E,MAAO,OAGlD9C,MAAO,4EAEPhC,QAAS,MACTmH,GAEJ,qBAAKjG,MAAK,eAAOkG,GAAjB,SACG7G,IAAMiH,aAAahI,EAAU,CAAEwE,aAAYC,0BCFvCwD,MA9Bf,WA2BE,OA1BcC,YAAU,CACtB,CACEC,KAAM,IACNC,QACE,cAAC,EAAD,UACE,cAAC,EAAD,OAIN,CACED,KAAM,iBACNC,QACE,cAAC,EAAD,UACE,cAAC,EAAD,OAIN,CACED,KAAM,kCACNC,QACE,cAAC,EAAD,UACE,cAAC,EAAD,UCfKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,wBCLC,GACbpB,ORMa,WAKZ,IAJDE,EAIA,uDAJQ,CACN9C,gBAAiB,CAAE/C,MAAO,GAAI0D,OAAQ,KAExC6D,EACA,uCACA,OAAQA,EAAO3I,MAEb,KAAKiE,EACH,OAAO,2BACFgD,GADL,IAEE9C,gBAAiBwE,EAAOxE,kBAM9B,OAAO8C,ISfT,IAAM2B,ECLGC,YACLC,YAAgB,eACXC,KDKTC,IAASC,OACP,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,IAAMM,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,UAINC,SAASC,eAAe,SAM1BlB,M","file":"static/js/main.92b1e397.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Container = ({ onClick, children }) => {\n  return (\n    <div className=\"border-gray radius-1 flex\" onClick={onClick}>\n      {children}\n    </div>\n  );\n};\n\nexport default Container;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowUp, faArrowDown } from \"@fortawesome/free-solid-svg-icons\";\n\nconst PreferenceAction = ({ type, preference, onClick }) => {\n  const voteColors = {\n    like: \"#6dc16d\",\n    dislike: \"#ca7979\",\n    neutral: \"#bdbbbb\",\n  };\n\n  return (\n    <div onClick={onClick} className=\"cursor-pointer\">\n      <FontAwesomeIcon\n        icon={type === \"like\" ? faArrowUp : faArrowDown}\n        color={preference[type] ? voteColors[type] : voteColors.neutral}\n        className=\"icon-size\"\n      />\n    </div>\n  );\n};\n\nconst CheckVotes = ({ likes }) => {\n  const [currentPreference, setCurrentPreference] = React.useState({\n    like: false,\n    dislike: false,\n    value: 0,\n  });\n\n  React.useEffect(() => {\n    setCurrentPreference((prev) => ({ ...prev, value: likes }));\n  }, [likes]);\n\n  return (\n    <div className=\"py-22 pl-30 flex column align-center justify-between\">\n      <PreferenceAction\n        type=\"like\"\n        preference={currentPreference}\n        onClick={() =>\n          setCurrentPreference((prev) => ({\n            like: !prev.like,\n            dislike: false,\n            value: !prev.like ? likes + 1 : likes,\n          }))\n        }\n      />\n      <div>\n        <span>{currentPreference.value}</span>\n      </div>\n      <PreferenceAction\n        type=\"dislike\"\n        preference={currentPreference}\n        onClick={() =>\n          setCurrentPreference((prev) => ({\n            like: false,\n            dislike: !prev.dislike,\n            value: !prev.dislike ? likes - 1 : likes,\n          }))\n        }\n      />\n    </div>\n  );\n};\n\nexport default CheckVotes;\n","import React from \"react\";\nimport TimeAgo from \"react-timeago\";\n\nconst SeparatedDetails = ({ title, description, details, onClick }) => {\n  return (\n    <div\n      className=\"py-20 px-30 cursor-pointer\"\n      style={{ flex: 1 }}\n      onClick={onClick}\n    >\n      {title && (\n        <div>\n          <h4 className=\"mb-14\">{title}</h4>\n        </div>\n      )}\n      {description && (\n        <div>\n          <span className=\"text-light-gray \">{description}</span>\n        </div>\n      )}\n      {details && (\n        <div className=\"mt-12 flex justify-between\">\n          <span className=\"text-light-gray\">\n            <small>\n              <a href=\"#\">/u/{details.user}</a>\n            </small>\n          </span>\n          <span className=\"text-light-gray\">\n            <small>\n              <TimeAgo date={details.createdAt} />\n            </small>\n          </span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SeparatedDetails;\n","import React from \"react\";\nimport axios from \"axios\";\n\nconst useSubreddits = (page) => {\n  const [fetching, setFetching] = React.useState(true);\n  const [data, setData] = React.useState([]);\n  const [noMoreData, setNoMoreData] = React.useState(false);\n  const [error, setError] = React.useState(false);\n\n  const baseURL = \"https://6040c786f34cf600173c8cb7.mockapi.io/subreddits\";\n\n  const asyncFetch = async () => {\n    try {\n      const response = await axios.get(baseURL + `?page=${page}&limit=10`);\n      const data = await response.data;\n\n      data.length === 0\n        ? setNoMoreData(true)\n        : setData((prev) => [...prev, ...data]);\n\n      setFetching(false);\n    } catch (e) {\n      setError(true);\n      setFetching(false);\n    }\n  };\n\n  React.useEffect(() => {\n    asyncFetch();\n  }, [page]);\n\n  return [fetching, data, noMoreData, error];\n};\n\nexport default useSubreddits;\n","import React from \"react\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router\";\n\nconst useComments = () => {\n  const { subredditID, postID } = useParams();\n\n  const [fetching, setFetching] = React.useState(true);\n  const [data, setData] = React.useState([]);\n  const [error, setError] = React.useState(false);\n\n  const asyncFetch = async () => {\n    try {\n      const response = await axios.get(\n        `https://6040c786f34cf600173c8cb7.mockapi.io/subreddits/${subredditID}/posts/${postID}/comments`\n      );\n      const data = await response.data;\n\n      setData(data);\n      setFetching(false);\n    } catch (e) {\n      setError(true);\n      setFetching(false);\n    }\n  };\n\n  React.useEffect(() => {\n    asyncFetch();\n  }, []);\n\n  return [fetching, data, error];\n};\n\nexport default useComments;\n","import React from \"react\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router\";\n\nconst usePosts = (page, sortBy) => {\n  const { subredditID } = useParams();\n\n  const [fetching, setFeching] = React.useState(true);\n  const [data, setData] = React.useState([]);\n  const [noMoreData, setNoMoreData] = React.useState(false);\n  const [error, setError] = React.useState(false);\n\n  const baseURL = \"https://6040c786f34cf600173c8cb7.mockapi.io/subreddits\";\n\n  const asyncFetch = async () => {\n    try {\n      const response = await axios.get(\n        baseURL + `/${subredditID}/posts?page=${page}&limit=10&sortBy=${sortBy}`\n      );\n      const data = await response.data;\n\n      data.length === 0\n        ? setNoMoreData(true)\n        : setData((prev) => [...prev, ...data]);\n\n      setFeching(false);\n    } catch (e) {\n      setError(true);\n      setFeching(false);\n    }\n  };\n\n  React.useEffect(() => setData([]), [sortBy]);\n\n  React.useEffect(() => asyncFetch(), [sortBy, page]);\n\n  return [fetching, data, noMoreData, error];\n};\n\nexport default usePosts;\n","import React from \"react\";\n\nexport default function useVisibilityChecker(ref) {\n  const [isIntersecting, setIntersecting] = React.useState(false);\n\n  const observer = new IntersectionObserver(([entry]) =>\n    setIntersecting(entry.isIntersecting)\n  );\n\n  React.useEffect(() => {\n    ref.current !== undefined && observer.observe(ref.current);\n\n    return () => {\n      observer.disconnect();\n    };\n  }, []);\n\n  return isIntersecting;\n}\n","import React from \"react\";\nimport axios from \"axios\";\nimport { useParams, useNavigate } from \"react-router\";\n\nconst useSingleSubreddit = () => {\n  const { subredditID } = useParams();\n\n  const [fetching, setFetching] = React.useState(true);\n  const [data, setData] = React.useState([]);\n  const [noMoreData, setNoMoreData] = React.useState(false);\n  const [error, setError] = React.useState(false);\n\n  const baseURL = \"https://6040c786f34cf600173c8cb7.mockapi.io/subreddits\";\n\n  const asyncFetch = async () => {\n    try {\n      const response = await axios.get(baseURL + `/${subredditID}`);\n      const data = await response.data;\n\n      setData(data);\n\n      setFetching(false);\n    } catch (e) {\n      setError(true);\n      setFetching(false);\n    }\n  };\n\n  React.useEffect(() => {\n    asyncFetch();\n  }, []);\n\n  return [fetching, data, noMoreData, error];\n};\n\nexport default useSingleSubreddit;\n","import React from \"react\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router\";\n\nconst useSinglePost = () => {\n  const { subredditID, postID } = useParams();\n\n  const [fetching, setFeching] = React.useState(true);\n  const [data, setData] = React.useState([]);\n  const [error, setError] = React.useState(false);\n\n  const baseURL = \"https://6040c786f34cf600173c8cb7.mockapi.io/subreddits\";\n\n  const asyncFetch = async () => {\n    try {\n      const response = await axios.get(\n        baseURL + `/${subredditID}/posts/${postID}`\n      );\n      const data = await response.data;\n\n      setData(data);\n\n      setFeching(false);\n    } catch (e) {\n      setError(true);\n      setFeching(false);\n    }\n  };\n\n  React.useEffect(() => asyncFetch(), []);\n\n  return [fetching, data, error];\n};\n\nexport default useSinglePost;\n","export const SET_HEADER_DESCRIBER = \"MAIN/SET_HEADER_DESCRIBER\";\n\nexport const setHeaderDescriber = (headerDescriber) => {\n  return {\n    type: SET_HEADER_DESCRIBER,\n    headerDescriber,\n  };\n};\n\nexport default function reducer(\n  state = {\n    headerDescriber: { title: \"\", byUser: \"\" },\n  },\n  action\n) {\n  switch (action.type) {\n    // Language\n    case SET_HEADER_DESCRIBER:\n      return {\n        ...state,\n        headerDescriber: action.headerDescriber,\n      };\n\n    default:\n      break;\n  }\n  return state;\n}\n","import React from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { useDispatch } from \"react-redux\";\nimport { Container, SeparatedDetails } from \"./elements\";\n\nimport Loading from \"react-loading\";\n\nimport { useSubreddits, useVisibilityChecker } from \"../hooks\";\n\nimport { setHeaderDescriber } from \"../core/reducers/header\";\n\nconst Subreddits = ({ pageStates, setPageState }) => {\n  const navigate = useNavigate();\n\n  const dispatch = useDispatch();\n\n  const ref = React.useRef();\n\n  const [page, setPage] = React.useState(1);\n  const [fetching, data, noMoreData, error] = useSubreddits(page);\n\n  const lastElementIsVisible = useVisibilityChecker(ref);\n\n  React.useEffect(() => {\n    dispatch(setHeaderDescriber({ title: \"subreddits\", byUser: \"\" }));\n  }, []);\n\n  React.useEffect(() => {\n    if (noMoreData) return;\n\n    if (lastElementIsVisible) setPage((prev) => prev + 1);\n  }, [lastElementIsVisible, data]);\n\n  React.useEffect(() => {\n    if (error) return setPageState(pageStates.error);\n\n    setPageState(pageStates.neutral);\n  }, [fetching]);\n\n  return (\n    <div className=\"grid p-38 m-auto\">\n      {data.map((reddit, ind) => (\n        <Container key={ind} onClick={() => navigate(`/r/${reddit.id}`)}>\n          <SeparatedDetails\n            title={reddit.title}\n            description={reddit.description}\n          />\n        </Container>\n      ))}\n      {\n        <div ref={ref} className=\"flex-center\">\n          {!noMoreData ? (\n            <Loading type=\"spin\" width=\"40px\" color=\"lightgray\" />\n          ) : (\n            \"You've reached the end\"\n          )}\n        </div>\n      }\n    </div>\n  );\n};\n\nexport default Subreddits;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { useComments, useSinglePost } from \"../hooks\";\nimport { CheckVotes, Container, SeparatedDetails } from \"./elements\";\n\nimport { setHeaderDescriber } from \"../core/reducers/header\";\n\nconst Comments = ({ pageStates, setPageState }) => {\n  const dispatch = useDispatch();\n\n  const [postFetching, postData, postError] = useSinglePost();\n  const [commentsFetching, commentsData, commentsError] = useComments();\n\n  React.useEffect(() => {\n    dispatch(\n      setHeaderDescriber({ title: `${postData.title}`, byUser: postData.user })\n    );\n  }, [postData]);\n\n  React.useEffect(() => {\n    if (postError || commentsError) return setPageState(pageStates.error);\n\n    if (!postFetching && !commentsFetching) setPageState(pageStates.neutral);\n  }, [postFetching, commentsFetching]);\n\n  return (\n    <div\n      className=\"p-30 m-auto\"\n      style={{\n        width: \"100%\",\n        maxWidth: 900,\n      }}\n    >\n      <div>\n        <Container>\n          <CheckVotes likes={postData.upvotes} />\n\n          <SeparatedDetails\n            title={postData.title}\n            description={postData.body}\n            details={{\n              user: postData.user,\n              createdAt: postData.createdAt,\n            }}\n          />\n        </Container>\n      </div>\n      <div className=\"m-auto mobile-full-width\" style={{ width: \"86%\" }}>\n        <div className=\"py-20 text-light-gray\">Comments</div>\n        {commentsData.map((comment, ind) => (\n          <div className=\"mb-30\" key={ind}>\n            <Container>\n              <SeparatedDetails\n                key={ind}\n                description={comment.body}\n                details={{ user: comment.name, createdAt: comment.createdAt }}\n              />\n            </Container>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Comments;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useParams, useNavigate } from \"react-router\";\n\nimport Select from \"react-select\";\n\nimport { usePosts, useSingleSubreddit, useVisibilityChecker } from \"../hooks\";\nimport { CheckVotes, Container, SeparatedDetails } from \"./elements\";\n\nimport { setHeaderDescriber } from \"../core/reducers/header\";\nimport Loading from \"react-loading\";\n\nconst Posts = ({ pageStates, setPageState }) => {\n  const dispatch = useDispatch();\n\n  const options = [\n    { value: \"title\", label: \"Title\" },\n    { value: \"date\", label: \"Date\" },\n  ];\n\n  const navigate = useNavigate();\n  const ref = React.useRef();\n\n  const [sortPosts, setSortPosts] = React.useState(\"date\");\n  const [page, setPage] = React.useState(1);\n\n  const lastElementIsVisible = useVisibilityChecker(ref);\n\n  const [subredditFetching, subredditData, subredditError] =\n    useSingleSubreddit();\n  const [postsFetching, postsData, noMoreData, error] = usePosts(\n    page,\n    sortPosts\n  );\n\n  React.useEffect(() => {\n    dispatch(\n      setHeaderDescriber({\n        title: `/r/${subredditData.title || \"\"}`,\n        byUser: \"\",\n      })\n    );\n  }, [subredditData]);\n\n  React.useEffect(() => {\n    if (subredditError || error) setPageState(pageStates.error);\n\n    if (!subredditFetching && !postsFetching) setPageState(pageStates.neutral);\n  }, [subredditFetching, postsFetching]);\n\n  React.useEffect(() => {\n    if (noMoreData) return;\n\n    if (lastElementIsVisible) setPage((prev) => prev + 1);\n  }, [lastElementIsVisible, postsData]);\n\n  return (\n    <div className=\"p-40 flex posts-size-medium\">\n      <div\n        className=\"flex column\"\n        style={{\n          flex: 1,\n        }}\n      >\n        <div className=\"flex justify-end align-center\">\n          <span className=\"mr-18\">Sort by</span>\n          <Select\n            options={options}\n            defaultValue={options[1]}\n            onChange={(value) => {\n              setPage(1);\n              setSortPosts(value.value);\n            }}\n          />\n        </div>\n        <div className=\"mt-30 flex column align-end\">\n          {postsData.map((post, ind) => (\n            <div\n              key={ind}\n              className=\"pb-30\"\n              style={{ maxWidth: 750, width: \"100%\" }}\n            >\n              <div>\n                <Container key={ind}>\n                  <CheckVotes likes={post.upvotes} />\n\n                  <SeparatedDetails\n                    onClick={() => navigate(`${post.id}/comments`)}\n                    title={post.title}\n                    description={post.body}\n                    details={{ user: post.user, createdAt: post.createdAt }}\n                  />\n                </Container>\n              </div>\n            </div>\n          ))}\n          <div ref={ref} className=\"flex-center\">\n            {!noMoreData ? (\n              <Loading type=\"spin\" width=\"40px\" color=\"lightgray\" />\n            ) : (\n              \"You've reached the end\"\n            )}\n          </div>\n        </div>\n      </div>\n\n      <div style={{ width: 60 }} />\n      <div className=\"pb-30\" style={{ minWidth: 500 }}>\n        <Container>\n          <SeparatedDetails\n            title={subredditData.title}\n            description={subredditData.description}\n            details={{\n              user: subredditData.admin,\n              createdAt: subredditData.createdAt,\n            }}\n          />\n        </Container>\n      </div>\n    </div>\n  );\n};\n\nexport default Posts;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router\";\n\nconst Header = () => {\n  const headerDescriber = useSelector((state) => state.Header.headerDescriber);\n  const navigate = useNavigate();\n\n  return (\n    <div\n      className=\"px-38 p-30 flex align-center\"\n      style={{\n        backgroundColor: \"#545871\",\n        color: \"white\",\n      }}\n    >\n      <div>\n        <h2\n          style={{ margin: 0, cursor: \"pointer\" }}\n          onClick={() => navigate({ pathname: \"/\" })}\n        >\n          <b>reddit</b>\n        </h2>\n      </div>\n      <div style={{ width: 25 }} />\n      <div>\n        <span>{headerDescriber.title}</span>\n        {headerDescriber.byUser !== \"\" && (\n          <span className=\"ml-62\">\n            by\n            <a className=\"ml-12\" style={{ color: \"#47e2ea\" }}>\n              /u/{headerDescriber.byUser}\n            </a>\n          </span>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport Loading from \"react-loading\";\n\nimport Header from \"./Header\";\n\nconst AppLayout = ({ children }) => {\n  const pageStates = {\n    loading: \"loading\",\n    error: \"error\",\n    neutral: \"neutral\",\n  };\n\n  const [pageState, setPageState] = React.useState(pageStates.loading);\n\n  const childrenVisibilityStyle =\n    pageState !== \"neutral\" ? { display: \"none\" } : {};\n\n  return (\n    <div className=\"flex column\" style={{ minHeight: \"100vh\" }}>\n      <Header />\n      <div style={{ position: \"relative\", flex: 1 }}>\n        {\n          {\n            loading: (\n              <div\n                className=\"flex justify-center py-60\"\n                style={{ width: \"100%\" }}\n              >\n                <Loading type=\"spin\" color=\"lightgray\" width={47} />\n              </div>\n            ),\n            error: <div>Something went wrong! Please report this.</div>,\n\n            neutral: null,\n          }[pageState]\n        }\n        <div style={{ ...childrenVisibilityStyle }}>\n          {React.cloneElement(children, { pageStates, setPageState })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AppLayout;\n","import { Subreddits, Comments, Posts } from \"./components\";\nimport AppLayout from \"./layouts\";\n\nimport { useRoutes } from \"react-router-dom\";\n\nfunction App() {\n  const pages = useRoutes([\n    {\n      path: \"/\",\n      element: (\n        <AppLayout>\n          <Subreddits />\n        </AppLayout>\n      ),\n    },\n    {\n      path: \"r/:subredditID\",\n      element: (\n        <AppLayout>\n          <Posts />\n        </AppLayout>\n      ),\n    },\n    {\n      path: \"r/:subredditID/:postID/comments\",\n      element: (\n        <AppLayout>\n          <Comments />\n        </AppLayout>\n      ),\n    },\n  ]);\n  return pages;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import Header from \"./header\";\n\nexport default {\n  Header,\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"./assets/styles/style.scss\";\n\nimport configureStore from \"./config/store\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\n// import thunk from \"redux-thunk\";\nimport reducers from \"../core/reducers\";\n// import mainReducers from \"../../main-reducers\";\n\nexport default function configureStore() {\n  return createStore(\n    combineReducers({\n      ...reducers,\n    })\n    // applyMiddleware(thunk)\n  );\n}\n"],"sourceRoot":""}